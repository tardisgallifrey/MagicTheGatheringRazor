// <auto-generated />
using System;
using MagicTheGathering.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MagicTheGatheringRazor.Migrations
{
    [DbContext(typeof(Magic_DBContext))]
    partial class Magic_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MagicTheGathering.Models.CardTypeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Card_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardsId");

                    b.ToTable("CardTypeList");
                });

            modelBuilder.Entity("MagicTheGathering.Models.Cards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FlavorText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Number_in_Set")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rarity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rules_Text")
                        .HasColumnType("TEXT");

                    b.Property<string>("Set_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Set_Size")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Toughness")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("MagicTheGathering.Models.ManaColorList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Card_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManaColor")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardsId");

                    b.ToTable("ManaColorList");
                });

            modelBuilder.Entity("MagicTheGathering.Models.SubTypeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Card_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardsId");

                    b.ToTable("SubTypeList");
                });

            modelBuilder.Entity("MagicTheGathering.Models.SuperTypeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Card_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardsId");

                    b.ToTable("supertypelist");
                });

            modelBuilder.Entity("MagicTheGathering.Models.CardTypeList", b =>
                {
                    b.HasOne("MagicTheGathering.Models.Cards", null)
                        .WithMany("Type")
                        .HasForeignKey("CardsId");
                });

            modelBuilder.Entity("MagicTheGathering.Models.ManaColorList", b =>
                {
                    b.HasOne("MagicTheGathering.Models.Cards", null)
                        .WithMany("ManaColors")
                        .HasForeignKey("CardsId");
                });

            modelBuilder.Entity("MagicTheGathering.Models.SubTypeList", b =>
                {
                    b.HasOne("MagicTheGathering.Models.Cards", null)
                        .WithMany("CreatureSub")
                        .HasForeignKey("CardsId");
                });

            modelBuilder.Entity("MagicTheGathering.Models.SuperTypeList", b =>
                {
                    b.HasOne("MagicTheGathering.Models.Cards", null)
                        .WithMany("SuperTypes")
                        .HasForeignKey("CardsId");
                });

            modelBuilder.Entity("MagicTheGathering.Models.Cards", b =>
                {
                    b.Navigation("CreatureSub");

                    b.Navigation("ManaColors");

                    b.Navigation("SuperTypes");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
